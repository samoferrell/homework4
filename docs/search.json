[
  {
    "objectID": "homework4qmd.html",
    "href": "homework4qmd.html",
    "title": "Homework 4 - ST558",
    "section": "",
    "text": "In this document, we will be writing functions and dealing with missing values. We will start by answering conceptual questions about this weeks lecture material."
  },
  {
    "objectID": "homework4qmd.html#task-1-conceptual-questions",
    "href": "homework4qmd.html#task-1-conceptual-questions",
    "title": "Homework 4 - ST558",
    "section": "Task 1: Conceptual Questions",
    "text": "Task 1: Conceptual Questions\nWhat is the purpose of the lapply() function? What is the equivalent purrr function?\n\nThe purpose of the lapply() function is to apply a function to each element in a list. The equivalent purrr function is the map() function\n\nSuppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want use lapply() to run the code cor(numeric_matrix, method = “kendall”) on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = “kendall” when calling lapply())\n\nlapply(numeric_namtrix = my_list, method = “kendall”)\n\nWhat are two advantages of using purrr functions instead of the BaseR apply family?\n\nThe purrr functions have common function names and syntax across functions.\n\nWhat is a side-effect function?\n\nA side-effect function is a function that doesn’t change anything it just creates output.\n\nWhy can you name a variable sd in a function and not cause any issues with the sd function?\n\nInside the function when we call it, there is a temporary function environment which is then destroyed after running the function."
  },
  {
    "objectID": "homework4qmd.html#task-2-writing-r-functions",
    "href": "homework4qmd.html#task-2-writing-r-functions",
    "title": "Homework 4 - ST558",
    "section": "Task 2: Writing R Functions",
    "text": "Task 2: Writing R Functions\nFirst, we will write a function that finds the RMSE of a response vector and a respective predictions vector.\n\n# I will be adding ... into the function to apply other arguments after the fact. \ngetRMSE &lt;- function(responses, predictions,...){\n  RMSE &lt;- sqrt(mean((responses - predictions)^2,...))\n  return(RMSE)\n}\n\nNow, I will test the function after creating data with no missing values.\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\ngetRMSE(responses = resp, predictions = pred)\n\n[1] 0.9581677\n\n\nNow, I will test the function after creating a vector “resp_NA” which contains missing values.\n\nresp_NA &lt;- c(resp[1:98],NA_real_,NA_real_)\n# First we will apply the function without removing the missing values to verify an error. \ngetRMSE(responses = resp_NA, predictions = pred)\n\n[1] NA\n\n# Then we will apply the function with specifying, na.rm = TRUE to remove the missing values.\ngetRMSE(responses = resp_NA, predictions = pred, na.rm = TRUE)\n\n[1] 0.9605\n\n\nNow we will be writing a function to calculate the MAE of a response vector and a respective predictions vector.\n\n# I will be adding ... into the function to apply other arguments after the fact. \ngetMAE &lt;- function(responses, predictions, ...){\n  RMSE &lt;- mean(abs(responses - predictions),...)\n  return(RMSE)\n}\n\nNow I will test the getMAE function:\n\ngetMAE(responses = resp, predictions = pred)\n\n[1] 0.8155776\n\n\nNow I will test the getMAE function with missing data.\n\n# First we will apply the function without removing the missing values to verify an error. \ngetMAE(responses = resp_NA, predictions = pred)\n\n[1] NA\n\n# Then we will apply the function with specifying, na.rm = TRUE to remove the missing values.\ngetMAE(responses = resp_NA, predictions = pred, na.rm = TRUE)\n\n[1] 0.8181006\n\n\nNow, we will create a wrapper function that calculates the RMSE and/or MAE.\n\nmy_wrapper &lt;- function(responses, predictions, get = \"both\"){\n  # First we will combine the vectors to more efficiently check for missing/incorrect data.\n  both_vectors &lt;- c(responses, predictions)\n  \n  # We will create a vector of logical objects from checking if the vectors \n  # are numerical, vectors, atomic, or missing.\n   if (FALSE %in% c(is.numeric(both_vectors), \n                    is.vector(both_vectors), \n                    is.atomic(both_vectors), \n                    !is.na(both_vectors))) {\n    stop(\"Input must be an atomic numeric vector, with no missing values.\")}\n  \nRMSE &lt;- getRMSE(responses, predictions)\nMAE &lt;- getMAE(responses, predictions)\n\n# I will use my local get object to pull any specific calculations.\n  if (get == \"both\"){\n  return(list(\"Root Mean Square Error\" = RMSE, \"Mean Absolute Deviation\" = MAE))}\n    else if (get == \"RMSE\"){\n    return(list(\"Root Mean Square Error\" = RMSE))}\n      else if (get == \"MAE\"){\n      return(list(\"Mean Absolute Deviation\" = MAE))}\n        else \n          {stop(\"For 'get' argument, specify RMSE, MAE, or both\")}\n  }\n\nNow, we will test the wrapper function. - First, we will test by calling for each metric individually.\n\nmy_wrapper(resp, pred, \"RMSE\")\n\n$`Root Mean Square Error`\n[1] 0.9581677\n\nmy_wrapper(resp, pred, \"MAE\")\n\n$`Mean Absolute Deviation`\n[1] 0.8155776\n\n\n\nNow, we will apply the function specifying both metrics to be returned:\n\n\nmy_wrapper(resp,pred, \"both\")\n\n$`Root Mean Square Error`\n[1] 0.9581677\n\n$`Mean Absolute Deviation`\n[1] 0.8155776\n\n\n\nNow we will repeat with a vector containing missing values.\n\n\nmy_wrapper(resp_NA, pred)\n\nError in my_wrapper(resp_NA, pred): Input must be an atomic numeric vector, with no missing values.\n\n\n\nNow we will apply the function to the incorrect data object (a data frame):\n\n\nresp_data_frame &lt;- data.frame(resp)\nmy_wrapper(resp_data_frame, pred)\n\nError in my_wrapper(resp_data_frame, pred): Input must be an atomic numeric vector, with no missing values."
  },
  {
    "objectID": "homework4qmd.html#task-3-querying-an-api-and-a-tidy-style-function",
    "href": "homework4qmd.html#task-3-querying-an-api-and-a-tidy-style-function",
    "title": "Homework 4 - ST558",
    "section": "Task 3: Querying an API and a Tidy-Style Function",
    "text": "Task 3: Querying an API and a Tidy-Style Function\n\nUse GET() from the httr package to return information about a topic that you are interested in that has been in the news lately (store the result as an R object). Note: We can only look 30 days into the past with a free account.\n\n\nurl_id &lt;- \"https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=d042b6702b44494f8531596ad64cf58c\"\nid_info &lt;- httr::GET(url_id)\nstr(id_info, max.level = 1)\n\nList of 10\n $ url        : chr \"https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=d042b6702b44494f8531596ad64cf58c\"\n $ status_code: int 200\n $ headers    :List of 14\n  ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\"\n $ all_headers:List of 1\n $ cookies    :'data.frame':    0 obs. of  7 variables:\n $ content    : raw [1:16581] 7b 22 73 74 ...\n $ date       : POSIXct[1:1], format: \"2024-06-26 04:31:12\"\n $ times      : Named num [1:6] 0 0.133 0.158 0.217 0.365 ...\n  ..- attr(*, \"names\")= chr [1:6] \"redirect\" \"namelookup\" \"connect\" \"pretransfer\" ...\n $ request    :List of 7\n  ..- attr(*, \"class\")= chr \"request\"\n $ handle     :Class 'curl_handle' &lt;externalptr&gt; \n - attr(*, \"class\")= chr \"response\"\n\n\n\nNow we will parse what is returned and find our way to the data frame that has the actual article information in it.\n\n\nlibrary(jsonlite)\n\nWarning: package 'jsonlite' was built under R version 4.3.3\n\nparsed &lt;- fromJSON(rawToChar(id_info$content))\nheadline_info &lt;- tibble::as_tibble(parsed$articles)\n\n\nNow we will write a quick function that allows the user to easily query this API. The inputs to the function should be the title/subject to search for (string), a time period to search from (string - you’ll search from that time until the present), and an API key.\n\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks jsonlite::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(purrr)\n\nThis function will take in an api_key, a title, and a time, and return a parsed data set as a tibble.\n\naccess_function &lt;- function(api_key, title, time){\n  url_start &lt;- \"https://newsapi.org/v2/everything?q=\"\n  url_full &lt;- paste(url_start, \n                    title, \"&from=\",\n                    time,\n                    \"&apiKey=\",\n                    api_key,\n                    sep =\"\")\n  id_info &lt;- httr::GET(url_full)\n  parsed &lt;- fromJSON(rawToChar(id_info$content))\n  headline_info &lt;- tibble::as_tibble(parsed$articles)\n  \n  return(headline_info)\n}\n\nWe will test our function by using our api key and specifying articles about cars from 2024-06-01.\n\ncars &lt;- access_function(api_key = \"d042b6702b44494f8531596ad64cf58c\",\n        title = \"cars\",\n        time = \"2024-06-01\")\ncars\n\n# A tibble: 100 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 wired     Wired Aaria… NYC’… New York C… http… https://m… 2024-06-07… \"On We…\n 2 &lt;NA&gt;      Gizm… Matt … Waym… Waymo issu… http… https://i… 2024-06-12… \"Waymo…\n 3 &lt;NA&gt;      Yaho… Danny… Gene… Cruise, Ge… http… &lt;NA&gt;       2024-06-11… \"If yo…\n 4 the-verge The … Janko… Redb… The DVD re… http… https://c… 2024-06-21… \"Redbo…\n 5 &lt;NA&gt;      Slas… msmash Chin… Assisted d… http… https://a… 2024-06-13… \"The w…\n 6 &lt;NA&gt;      Read… James… Drea… Dreamcars … http… https://r… 2024-06-16… \"Dream…\n 7 &lt;NA&gt;      Yaho… &lt;NA&gt;   Best… &lt;NA&gt;        http… &lt;NA&gt;       2024-06-08… \"If yo…\n 8 ars-tech… Ars … Kevin… Fisk… No word on… http… https://c… 2024-06-18… \"Enlar…\n 9 the-verge The … Abiga… The … Intelligen… http… https://c… 2024-06-12… \"The s…\n10 business… Busi… Jaure… Why … Stellantis… http… https://i… 2024-06-14… \"Stell…\n# ℹ 90 more rows\n\n\nNow, we will test it again using our api key and specifying articles about chess from 2024-06-15.\n\nchess &lt;- access_function(api_key = \"d042b6702b44494f8531596ad64cf58c\",\n         title = \"chess\",\n         time = \"2024-06-15\")\nchess\n\n# A tibble: 100 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      Gizm… Harri… Appl… As Apple e… http… https://i… 2024-06-15… \"As Ap…\n 2 the-verge The … David… The … Plus: the … http… https://c… 2024-06-23… \"The n…\n 3 &lt;NA&gt;      Desi… Kelly… Invi… New seatin… http… https://d… 2024-06-19… \"The p…\n 4 &lt;NA&gt;      Seth… Seth … The … Dan Dennet… http… https://s… 2024-06-17… \"Dan D…\n 5 &lt;NA&gt;      Mit.… &lt;NA&gt;   Shea… An approac… http… https://m… 2024-06-16… \"An ap…\n 6 &lt;NA&gt;      BBC … BBC S… Engl… England's … http… https://i… 2024-06-18… \"On th…\n 7 &lt;NA&gt;      Laug… Lori … A Wh… ForgeCore … http… https://l… 2024-06-19… \"Laugh…\n 8 &lt;NA&gt;      Idyl… &lt;NA&gt;   Exce… I've been … http… &lt;NA&gt;       2024-06-16… \"Publi…\n 9 &lt;NA&gt;      BBC … &lt;NA&gt;   ‘If … England fo… http… https://i… 2024-06-18… \"'He w…\n10 ign       IGN   Chris… We B… We piece t… http… https://a… 2024-06-18… \"The n…\n# ℹ 90 more rows"
  }
]